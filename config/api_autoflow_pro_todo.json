{
  "$product": {
    "deployment_mode": "SOLO",
    "name": "API AutoFlow Pro",
    "version": "3.0.17"
  },
  "API": [
    {
      "id": "hh",
      "type": "http",
      "version": {
        "0.28.0": {
          "components": {
            "parameters": {
              "bundlesParameter": {
                "description": "Reports on bundle activation status (useful for 'ready' checks at startup).\n\nThis includes any discovery bundles or bundles defined in the loaded discovery configuration.",
                "example": true,
                "in": "query",
                "name": "bundles",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "explainParameter": {
                "description": "If set to *full*, response will include query explanations in addition to the result.",
                "example": "full",
                "in": "query",
                "name": "explain",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              "idParameter": {
                "description": "The name of a policy module",
                "example": "example1",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "ifNoneMatchParameter": {
                "description": "The server will respect the If-None-Match header if it is set to * (in other words, it will not overwrite an existing document located at the specified `path`).",
                "example": "*",
                "in": "header",
                "name": "If-None-Match",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              "inputParameter": {
                "description": "Provide the text for an [input document](https://www.openpolicyagent.org/docs/latest/kubernetes-primer/#input-document) in JSON format",
                "in": "query",
                "name": "input",
                "required": false,
                "schema": {
                  "additionalProperties": {},
                  "example": {
                    "input": {
                      "example": {
                        "flag": true
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "instrumentParameter": {
                "description": "If true, response will return additional performance metrics in addition to the result and the standard metrics.\n\n**Caution:** This can add significant overhead to query evaluation. The recommendation is to only use this parameter if you are debugging a performance problem.",
                "example": false,
                "in": "query",
                "name": "instrument",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "metricsParameter": {
                "description": "If true, compiler performance metrics will be returned in the response.",
                "example": false,
                "in": "query",
                "name": "metrics",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "pathParameter": {
                "allowReserved": true,
                "description": "A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404.",
                "example": "opa/examples/public_servers",
                "in": "path",
                "name": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "pluginsParameter": {
                "description": "Reports on plugin status",
                "example": false,
                "in": "query",
                "name": "plugins",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "prettyParameter": {
                "description": "If true, response will be in a human-readable format.",
                "example": true,
                "in": "query",
                "name": "pretty",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "provenanceParameter": {
                "description": "If true, response will include build and version information in addition to the result.",
                "example": false,
                "in": "query",
                "name": "provenance",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              "qParameter": {
                "description": "The [URL-encoded](https://www.w3schools.com/tags/ref_urlencode.ASP) ad-hoc query to execute.",
                "example": "{\"query\": \"data.servers[i].ports[_] = \\\"p2\\\"; data.servers[i].name = name\"}",
                "in": "query",
                "name": "q",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "webhookPathParameter": {
                "description": "A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404.",
                "example": "opa/examples/allow_request",
                "in": "path",
                "name": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "responses": {
              "badRequestResponse": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/400"
                    }
                  }
                },
                "description": "Bad request"
              },
              "notFoundResponse": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404"
                    }
                  }
                },
                "description": "Not found (for example, a requested policy module or document does not exist)"
              },
              "serverErrorResponse": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/400"
                    }
                  }
                },
                "description": "Server error"
              },
              "successQuery": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/200Result"
                        },
                        {
                          "$ref": "#/components/schemas/200Metrics"
                        },
                        {
                          "$ref": "#/components/schemas/200Explanations"
                        }
                      ]
                    }
                  }
                },
                "description": "Success"
              },
              "successResponse": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/200Result"
                        },
                        {
                          "$ref": "#/components/schemas/200Provenance"
                        },
                        {
                          "$ref": "#/components/schemas/200Metrics"
                        },
                        {
                          "$ref": "#/components/schemas/200Explanations"
                        }
                      ]
                    }
                  }
                },
                "description": "Success"
              },
              "successResult": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/200Result"
                    }
                  }
                },
                "description": "Success"
              },
              "successZipResponse": {
                "content": {
                  "application/gzip": {
                    "schema": {
                      "format": "binary",
                      "type": "string"
                    }
                  }
                },
                "description": "Success. You will find a gzip file is in the response's message body"
              }
            },
            "schemas": {
              "200Explanations": {
                "properties": {
                  "explanation": {
                    "items": {
                      "properties": {
                        "locals": {
                          "description": "The query's term bindings at the point when the trace event was emitted.",
                          "items": {
                            "properties": {
                              "key": {
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "node": {
                          "description": "The AST element associated with the evaluation step.",
                          "externalDocs": {
                            "description": "AST",
                            "url": "https://godoc.org/github.com/open-policy-agent/opa/ast"
                          },
                          "properties": {
                            "index": {
                              "description": "Node number",
                              "type": "number"
                            },
                            "terms": {
                              "items": {
                                "properties": {
                                  "type": {
                                    "example": "var",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "$term1",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "op": {
                          "description": "The kind of *trace event*\n\nEach trace event represents a step in the query evaluation process. Trace events are emitted at the following points:\n- enter - before a body or rule is evaluated\n- exit - after a body or rule has evaluated successfully\n- eval - before an expression is evaluated\n- fail - after an expression has evaluated to false.\n- redo - before evaluation restarts from a body, rule, or expression.\n\nBy default, OPA searches for all sets of term bindings that make all expressions in the query evaluate to true. Because there may be multiple answers, the search can restart when OPA determines the query is true or false. When the search restarts, a *redo trace event* is emitted.",
                          "enum": [
                            "enter",
                            "exit",
                            "eval",
                            "fail",
                            "redo"
                          ],
                          "example": "enter",
                          "type": "string"
                        },
                        "parent_id": {
                          "description": "The parent query. Use this field to identify trace events from related queries.\n\nFor example, if query A references rule R, trace events emitted when evaluating rule R will have the *parent_id* field set to query A’s *query_id*.",
                          "example": 0,
                          "minimum": 0,
                          "type": "number"
                        },
                        "query_id": {
                          "description": "The query that the trace event was emitted for. Use this field to distinguish trace events emitted by from different queries.",
                          "example": 0,
                          "minimum": 0,
                          "type": "number"
                        },
                        "type": {
                          "description": "The type of the **node** field",
                          "enum": [
                            "expr",
                            "rule",
                            "body"
                          ],
                          "example": "expr",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "200Metrics": {
                "properties": {
                  "metrics": {
                    "properties": {
                      "counter_server_query_cache_hit": {
                        "description": "*Description is forthcoming*",
                        "example": 0,
                        "type": "number"
                      },
                      "timer_query_compile_stage_build_comprehension_index_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 43000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_check_safety_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 852000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_check_types_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 577000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_check_undefined_funcs_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 426000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_check_unsafe_builtins_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 14000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_resolve_refs_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 3000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_rewrite_comprehension_terms_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 329000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_rewrite_dynamic_terms_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 27000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_rewrite_expr_terms_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 40000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_rewrite_local_vars_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 187000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_rewrite_to_capture_value_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 1178000,
                        "type": "number"
                      },
                      "timer_query_compile_stage_rewrite_with_values_ns": {
                        "description": "(Only returned if `instrument` is true.) *Description is forthcoming*",
                        "example": 23000,
                        "type": "number"
                      },
                      "timer_rego_input_parse_ns": {
                        "description": "Time taken (in nanonseconds) to parse the input",
                        "example": 69994,
                        "type": "number"
                      },
                      "timer_rego_module_compile_ns": {
                        "description": "Time taken (in nanonseconds) to compile the loaded policy modules",
                        "example": 69994,
                        "type": "number"
                      },
                      "timer_rego_module_parse_ns": {
                        "description": "Time taken (in nanoseconds) to parse the input policy module",
                        "example": 12345,
                        "type": "number"
                      },
                      "timer_rego_query_compile_ns": {
                        "description": "Time taken (in nanoseconds) to compile the query",
                        "example": 4096,
                        "type": "number"
                      },
                      "timer_rego_query_eval_ns": {
                        "description": "Time taken (in nanonseconds) to evaluate the query",
                        "example": 69994,
                        "type": "number"
                      },
                      "timer_rego_query_parse_ns": {
                        "description": "Time taken (in nanoseconds) to parse the query",
                        "example": 4096,
                        "type": "number"
                      },
                      "timer_server_handler_ns": {
                        "description": "Time taken (in nanoseconds) to handle the API request",
                        "example": 631000,
                        "type": "number"
                      },
                      "timer_server_read_bytes_ns": {
                        "description": "*Description is forthcoming*",
                        "example": 631000,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "200Provenance": {
                "properties": {
                  "provenance": {
                    "properties": {
                      "build_commit": {
                        "description": "The Git commit id of this OPA build.",
                        "example": "4c6e524",
                        "type": "string"
                      },
                      "build_hostname": {
                        "description": "The hostname where this instance was built.",
                        "example": "3bb58334a5a9",
                        "type": "string"
                      },
                      "build_timestamp": {
                        "description": "When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))",
                        "type": "string"
                      },
                      "bundles": {
                        "additionalProperties": {},
                        "description": "A set of key-value pairs describing each bundle activated on the server.",
                        "type": "object"
                      },
                      "version": {
                        "description": "The version of this OPA instance",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "200Result": {
                "properties": {
                  "result": {
                    "items": {
                      "properties": {
                        "ast": {
                          "description": "The types for declarations and runtime objects passed to your implementation. This consists of an abstract syntax tree (AST) of policy modules, package and import declarations, rules, expressions, and terms.",
                          "externalDocs": {
                            "description": "AST",
                            "url": "https://godoc.org/github.com/open-policy-agent/opa/ast"
                          },
                          "properties": {
                            "package": {
                              "properties": {
                                "path": {
                                  "description": "The path to the package",
                                  "items": {
                                    "properties": {
                                      "type": {
                                        "description": "The type of the path operation",
                                        "enum": [
                                          "import",
                                          "package"
                                        ],
                                        "example": "import",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The path variable",
                                        "example": "data.opa.example",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "rules": {
                              "description": "When OPA evaluates a rule, it generates the content of a [virtual documents](https://www.openpolicyagent.org/docs/latest/philosophy/#the-opa-document-model)",
                              "externalDocs": {
                                "description": "Rules",
                                "url": "https://www.openpolicyagent.org/docs/latest/policy-language/#rules"
                              },
                              "items": {
                                "properties": {
                                  "body": {
                                    "description": "A list of the terms in this rule",
                                    "items": {
                                      "properties": {
                                        "index": {
                                          "description": "The location of this term in the list (starts at 0)",
                                          "example": 1,
                                          "type": "number"
                                        },
                                        "terms": {
                                          "description": "The type/value pairing for this term",
                                          "items": {
                                            "properties": {
                                              "type": {
                                                "description": "The type of the term variable",
                                                "example": "var",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The list of types and values for the term variable",
                                                "items": {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "type": "array"
                                              }
                                            }
                                          },
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "type": "array"
                                  },
                                  "head": {
                                    "properties": {
                                      "key": {
                                        "description": "The type/value pairing for this rule's head",
                                        "properties": {
                                          "type": {
                                            "description": "The type of the head",
                                            "example": "var",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value of the head",
                                            "example": "$0",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "name": {
                                        "description": "The head of the rule",
                                        "example": "violations",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "array",
                              "uniqueItems": true
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The name of a policy module",
                          "example": "example2",
                          "minLength": 1,
                          "type": "string"
                        },
                        "raw": {
                          "description": "A string representation of the full Rego policy",
                          "example": "package opa.examples\\n\\nimport data.servers\\n\\nviolations[server] {\\n\\tserver = servers[_]\\n\\tserver.protocols[_] = \\\"http\\\"\\n\\tpublic_servers[server]\\n}\\n",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "400": {
                "properties": {
                  "code": {
                    "description": "The error code name",
                    "example": "invalid_parameter",
                    "minLength": 1,
                    "type": "string"
                  },
                  "errors": {
                    "description": "Errors that may have been generated during the parse, compile, or installation of a policy module",
                    "items": {
                      "properties": {
                        "code": {
                          "description": "The error code name",
                          "example": "rego_unsafe_var_error",
                          "minLength": 1,
                          "type": "string"
                        },
                        "location": {
                          "description": "Where the error occurred",
                          "properties": {
                            "col": {
                              "description": "The column in the policy module where the error occurred",
                              "example": 1,
                              "type": "number"
                            },
                            "file": {
                              "description": "The policy module name that generated the error",
                              "example": "example1",
                              "type": "string"
                            },
                            "row": {
                              "description": "The line number in the policy module where the error occurred",
                              "example": 3,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "message": {
                          "description": "A general description of the error",
                          "example": "var x is unsafe",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "message": {
                    "description": "The description of the error",
                    "example": "error(s) occurred while compiling module(s)",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "404": {
                "properties": {
                  "code": {
                    "description": "The error code name",
                    "example": "resource_not_found",
                    "minLength": 1,
                    "type": "string"
                  },
                  "message": {
                    "description": "The description of the error (including the name of any undefined policy module)",
                    "example": "storage_not_found_error: policy id \\\"partial\\\"",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "inputSchema": {
                "additionalProperties": {},
                "example": "{\n  \"input\": {\n   \"example\": {\n     \"flag\": true\n     }\n   }\n }",
                "type": "object",
                "x-examples": {
                  "example": "{\n  \"input\": {\n   \"example\": {\n     \"flag\": true\n     }\n   }\n }"
                }
              },
              "partialQuerySchema": {
                "additionalProperties": {},
                "example": "{\n  \"query\": \"data.example.allow == true\",\n  \"input\": {\n    \"subject\": {\n      \"clearance_level\": 4\n    }\n  },\n  \"unknowns\": [\n    \"data.reports\"\n    ]\n}",
                "type": "object"
              },
              "patchesSchema": {
                "description": "A list of one or more [JSON patch operations](http://jsonpatch.com/)",
                "items": {
                  "description": "A JSON patch operation",
                  "properties": {
                    "op": {
                      "description": "JSON patch operation type",
                      "enum": [
                        "add",
                        "remove",
                        "replace",
                        "remove",
                        "move",
                        "copy",
                        "test"
                      ],
                      "example": "add",
                      "minLength": 1,
                      "type": "string"
                    },
                    "path": {
                      "description": "A [JSON pointer](https://tools.ietf.org/html/rfc6901) to a location within the target document where the operation is performed.\n\nThe *effective path* is this value prefixed with the API call's `path` parameter.\n\nThe server will return a *bad request* (404) response if:\n\n- The *parent* of the effective path does not refer to an existing document\n- For **remove** and **replace** operations, the effective path does not refer to an existing document.",
                      "example": "-",
                      "minLength": 1,
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": {},
                      "description": "The value to add, replace or test.",
                      "example": "{\n  \"id\": \"s5\",\n  \"name\": \"job\",\n  \"protocols\": [\"amqp\"],\n  \"ports\": [\"p3\"]\n}",
                      "type": "object"
                    }
                  },
                  "required": [
                    "op",
                    "path"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              "qSchema": {
                "additionalProperties": {},
                "example": "{\n  \"query\": \"data.servers[i].ports[_] = \\\"p2\\\"; data.servers[i].name = name\"\n}",
                "type": "object"
              },
              "queryInputSchema": {
                "additionalProperties": {},
                "example": "{\n  \"user\": [\"alice\"]\n}",
                "type": "object"
              },
              "webhookInputSchema": {
                "additionalProperties": {},
                "example": "{\n  \"example\": {\n    \"flag\": true\n    }\n }",
                "type": "object"
              }
            },
            "securitySchemes": {}
          },
          "externalDocs": {
            "description": "OPA documentation",
            "url": "https://www.openpolicyagent.org/docs/latest/"
          },
          "info": {
            "contact": {
              "name": "The OPA team",
              "url": "https://github.com/open-policy-agent/opa"
            },
            "description": "OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.\n\n### API specification viewing options\n\n- **[View the specification in *Redoc* (default)](index.html)**\n- **[View the specification in *Swagger UI*](swagger-ui.html)**",
            "license": {
              "name": "Apache 2.0",
              "url": "https://www.apache.org/licenses/LICENSE-2.0"
            },
            "title": "Open Policy Agent (OPA) REST API",
            "version": "0.28.0",
            "x-apisguru-categories": [
              "open_data"
            ],
            "x-logo": {
              "altText": "OPA logo",
              "backgroundColor": "#FFFFFF",
              "url": "https://api.apis.guru/v2/cache/logo/https_github.com_open-policy-agent_opa_blob_master_docs_website_static_img_logos_opa-horizontal-color.png"
            },
            "x-origin": [
              {
                "format": "openapi",
                "url": "https://raw.githubusercontent.com/open-policy-agent/contrib/master/open_api/openapi.yaml",
                "version": "3.0"
              }
            ],
            "x-providerName": "openpolicy.local"
          },
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "post": {
                "description": "This API queries the document at */data/system/main* by default (however, you can [configure OPA](https://www.openpolicyagent.org/docs/latest/configuration/) to use a different path to serve these queries). That document defines the response.\nFor example, use the following in `PUT /v1/policies/{path}`) to define a rule that will produce a value for the */data/system/main* document:\n\n  ```yaml\n  package system\n  main = msg {\n    msg := sprintf(\"hello, %v\", input.user)\n  }\n  ```\n\nThe server will return a *not found* (404) response if */data/system/main* is undefined.",
                "operationId": "postSimpleQuery",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/queryInputSchema"
                      }
                    }
                  },
                  "description": "The text of the input document (in JSON format)",
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "Success"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Execute a simple query",
                "tags": [
                  "Query API"
                ]
              }
            },
            "/health": {
              "get": {
                "description": "This API endpoint verifies that the server is operational.\n\nThe response from the server is either 200 or 500:\n- **200** - OPA service is healthy. If `bundles` is true, then all configured bundles have been activated. If `plugins` is true, then all plugins are in an 'OK' state.\n- **500** - OPA service is *not* healthy. If `bundles` is true, at least one of configured bundles has not yet been activated. If `plugins` is true, at least one plugins is in a 'not OK' state.\n\n---\n**Note**\nThis check is only for initial bundle activation. Subsequent downloads will not affect the health check.\n\nUse the **status** endpoint (in the (management API)[management.html]) for more fine-grained bundle status monitoring.\n\n---",
                "externalDocs": {
                  "description": "Bundles",
                  "url": "https://www.openpolicyagent.org/docs/latest/management/#bundles"
                },
                "operationId": "getHealth",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/bundlesParameter"
                  },
                  {
                    "$ref": "#/components/parameters/pluginsParameter"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "OPA service is healthy"
                  },
                  "500": {
                    "description": "OPA service is not healthy"
                  }
                },
                "summary": "Health",
                "tags": [
                  "Health API"
                ]
              }
            },
            "/v0/data/{path}": {
              "parameters": [
                {
                  "$ref": "#/components/parameters/webhookPathParameter"
                }
              ],
              "post": {
                "description": "The example given here assumes you have created a policy (with `PUT /v1/policies/{path}`), such as:\n\n  ```yaml\n  package opa.examples\n  import input.example.flag\n  allow_request { flag == true }\n  ```\n\nThe server will return a *not found* (404) response if the requested document is missing or undefined.\n",
                "operationId": "getDocumentWithWebHook",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/x-yaml": {
                      "schema": {
                        "$ref": "#/components/schemas/webhookInputSchema"
                      }
                    }
                  },
                  "description": "The input document (in JSON format)",
                  "required": true
                },
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResponse"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Get a document (with webhook)",
                "tags": [
                  "Data API"
                ]
              }
            },
            "/v1/compile": {
              "post": {
                "description": "This API endpoint allows you to partially evaluate Rego queries and obtain a simplified version of the policy. The example below assumes that OPA has been given the following policy (use `PUT /v1/policies/{path}`):\n\n```yaml\npackage example\nallow {\n  input.subject.clearance_level >= data.reports[_].clearance_level\n}\n```\nCompile API **request body** so that it contain the following fields:\n\n| Field | Type | Required | Description |\n| --- | --- | --- | --- |\n| `query` | `string` | Yes | The query to partially evaluate and compile. |\n| `input` | `any` | No | The input document to use during partial evaluation (default: undefined). |\n| `unknowns` | `array[string]` | No | The terms to treat as unknown during partial evaluation (default: `[\"input\"]`]). |\n\nFor example:\n\n```json\n{\n  \"query\": \"data.example.allow == true\",\n  \"input\": {\n    \"subject\": {\n      \"clearance_level\": 4\n    }\n  },\n  \"unknowns\": [\n    \"data.reports\"\n    ]\n}\n```\n### Partial evaluation\nIn some cases, the result of partial valuation is a conclusive, unconditional answer. See [the guidance](https://www.openpolicyagent.org/docs/latest/rest-api/#unconditional-results-from-partial-evaluation) for details.",
                "externalDocs": {
                  "description": "Partial evaluation article",
                  "url": "https://blog.openpolicyagent.org/partial-evaluation-162750eaf422"
                },
                "operationId": "postCompile",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  },
                  {
                    "$ref": "#/components/parameters/explainParameter"
                  },
                  {
                    "$ref": "#/components/parameters/metricsParameter"
                  },
                  {
                    "$ref": "#/components/parameters/instrumentParameter"
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/partialQuerySchema"
                      }
                    }
                  },
                  "description": "The query (in JSON format)",
                  "required": false
                },
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successQuery"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Compile",
                "tags": [
                  "Compile API"
                ]
              }
            },
            "/v1/data/{path}": {
              "delete": {
                "description": "This API endpoint deletes an existing document from the server",
                "operationId": "deleteDocument",
                "responses": {
                  "204": {
                    "description": "Success"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Delete a document",
                "tags": [
                  "Data API"
                ]
              },
              "get": {
                "description": "This API endpoint returns the document specified by `path`.\n\nThe server will return a *bad request* (400) response if either:\n- The query requires an input document and you do not provide it\n- You provide the input document but the query has already defined it.",
                "operationId": "getDocument",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/inputParameter"
                  },
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  },
                  {
                    "$ref": "#/components/parameters/provenanceParameter"
                  },
                  {
                    "$ref": "#/components/parameters/explainParameter"
                  },
                  {
                    "$ref": "#/components/parameters/metricsParameter"
                  },
                  {
                    "$ref": "#/components/parameters/instrumentParameter"
                  }
                ],
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResponse"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Get a document",
                "tags": [
                  "Data API"
                ]
              },
              "parameters": [
                {
                  "$ref": "#/components/parameters/pathParameter"
                }
              ],
              "patch": {
                "description": "This API endpoint updates an existing document on the server by describing the changes required (using [JSON patch operations](http://jsonpatch.com/))",
                "operationId": "patchDocument",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/patchesSchema"
                      }
                    }
                  },
                  "description": "The list of JSON patch operations.",
                  "required": true
                },
                "responses": {
                  "204": {
                    "description": "Success"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Update a document",
                "tags": [
                  "Data API"
                ]
              },
              "post": {
                "description": "The server will return a *bad request* (400) response if either:\n- The query requires an input document and you do not provide it\n- You provided an input document but the query has already defined it.\n\nIf `path` indexes into an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, a *not found* response (404) will be returned.",
                "operationId": "getDocumentWithPath",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  },
                  {
                    "$ref": "#/components/parameters/provenanceParameter"
                  },
                  {
                    "$ref": "#/components/parameters/explainParameter"
                  },
                  {
                    "$ref": "#/components/parameters/metricsParameter"
                  },
                  {
                    "$ref": "#/components/parameters/instrumentParameter"
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/x-yaml": {
                      "schema": {
                        "$ref": "#/components/schemas/inputSchema"
                      }
                    }
                  },
                  "description": "The input document (in JSON format)",
                  "required": true
                },
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResponse"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Get a document (with input)",
                "tags": [
                  "Data API"
                ]
              },
              "put": {
                "description": "If the path does not refer to an existing document (for example *us-west/servers*), the server will attempt to create all the necessary containing documents.\n\nThis behavior is similar to the Unix command [mkdir -p](https://en.wikipedia.org/wiki/Mkdir#Options).",
                "operationId": "putDocument",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/ifNoneMatchParameter"
                  }
                ],
                "responses": {
                  "204": {
                    "description": "Success"
                  },
                  "304": {
                    "description": "Document was not modified"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Create or overwrite a document",
                "tags": [
                  "Data API"
                ]
              }
            },
            "/v1/policies": {
              "get": {
                "description": "This API endpoint responds with a list of all policy modules on the server (result response)",
                "operationId": "getPolicies",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  }
                ],
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResult"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "List policies",
                "tags": [
                  "Policy API"
                ],
                "x-code-samples": [
                  {
                    "lang": "JavaScript",
                    "source": "fetch(\"http://localhost:8181/v1/policies\", {\n  \"method\": \"GET\",\n  \"headers\": {}\n  })\n  .then(response => {\n     console.log(response);\n    })\n  .catch(err => {\n    console.error(err);\n    });\n"
                  },
                  {
                    "lang": "Python",
                    "source": "import http.client\nconn = http.client.HTTPConnection(\"localhost:8181\")\nconn.request(\"GET\", \"/v1/policies\")\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode(\"utf-8\"))\n"
                  },
                  {
                    "lang": "Java",
                    "source": "AsyncHttpClient client = new DefaultAsyncHttpClient();\nclient.prepare(\"GET\", \"http://localhost:8181/v1/policies\")\n  .execute()\n  .toCompletableFuture()\n  .thenAccept(System.out::println)\n  .join();\nclient.close();\n"
                  },
                  {
                    "lang": "Go",
                    "source": "package main\nimport (\n  \"fmt\"\n  \"net/http\"\n  \"io/ioutil\"\n  )\nfunc main() {\n  url := \"http://localhost:8181/v1/policies\"\n  req, _ := http.NewRequest(\"GET\", url, nil)\n  res, _ := http.DefaultClient.Do(req)\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n  fmt.Println(res)\n  fmt.Println(string(body))\n}\n"
                  }
                ]
              }
            },
            "/v1/policies/{id}": {
              "delete": {
                "description": "This API endpoint removes an existing policy module from the server",
                "operationId": "deletePolicyModule",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  }
                ],
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResponse"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Delete a policy module",
                "tags": [
                  "Policy API"
                ]
              },
              "get": {
                "description": "This API endpoint returns the details of the specified policy module (`{id}`)",
                "operationId": "getPolicyModule",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  }
                ],
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResult"
                  },
                  "404": {
                    "$ref": "#/components/responses/notFoundResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Get a policy module",
                "tags": [
                  "Policy API"
                ]
              },
              "parameters": [
                {
                  "$ref": "#/components/parameters/idParameter"
                }
              ],
              "put": {
                "description": "- If the policy module does not exist, it is created.\n- If the policy module already exists, it is replaced.\n\nIf the policy module isn't correctly defined, a *bad request* (400) response is returned.\n\n### Example policy module\n```yaml\npackage opa.examples\n\nimport data.servers\nimport data.networks\nimport data.ports\n\npublic_servers[server] {\n  some k, m\n  \tserver := servers[_]\n  \tserver.ports[_] == ports[k].id\n  \tports[k].networks[_] == networks[m].id\n  \tnetworks[m].public == true\n}\n```",
                "operationId": "putPolicyModule",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  },
                  {
                    "$ref": "#/components/parameters/metricsParameter"
                  }
                ],
                "requestBody": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "example": "package opa.examples\n\nimport data.servers\nimport data.networks\nimport data.ports\n\npublic_servers[server] {\n  some k, m\n  \tserver := servers[_]\n  \tserver.ports[_] == ports[k].id\n  \tports[k].networks[_] == networks[m].id\n  \tnetworks[m].public == true\n}",
                        "type": "string"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successResult"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Create or update a policy module",
                "tags": [
                  "Policy API"
                ]
              }
            },
            "/v1/query": {
              "get": {
                "description": "This API endpoint returns bindings for the variables in the query.\n\nFor more complex JSON queries, use `POST /v1/query` instead.",
                "operationId": "getQuery",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/qParameter"
                  },
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  },
                  {
                    "$ref": "#/components/parameters/explainParameter"
                  },
                  {
                    "$ref": "#/components/parameters/metricsParameter"
                  }
                ],
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successQuery"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  }
                },
                "summary": "Execute an ad-hoc query (simple)",
                "tags": [
                  "Query API"
                ]
              },
              "post": {
                "description": "This API endpoint returns bindings for the variables in the query.\n\nFor simpler JSON queries, you may use `GET /v1/query` instead.",
                "operationId": "postQuery",
                "parameters": [
                  {
                    "$ref": "#/components/parameters/prettyParameter"
                  },
                  {
                    "$ref": "#/components/parameters/explainParameter"
                  },
                  {
                    "$ref": "#/components/parameters/metricsParameter"
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/x-yaml": {
                      "schema": {
                        "$ref": "#/components/schemas/qSchema"
                      }
                    }
                  },
                  "description": "The test of the query (in JSON format)",
                  "required": true
                },
                "responses": {
                  "200": {
                    "$ref": "#/components/responses/successQuery"
                  },
                  "400": {
                    "$ref": "#/components/responses/badRequestResponse"
                  },
                  "500": {
                    "$ref": "#/components/responses/serverErrorResponse"
                  },
                  "501": {
                    "description": "Streaming not implemented"
                  }
                },
                "summary": "Execute an ad-hoc query (complex)",
                "tags": [
                  "Query API"
                ]
              }
            }
          },
          "security": [],
          "servers": [
            {
              "url": "http://openpolicy.local"
            }
          ],
          "tags": [
            {
              "description": "Allows you to add, remove and modify policy modules. *Policy module identifiers are only used for management purposes. They are not used outside the Policy API.*",
              "name": "Policy API"
            },
            {
              "description": "Exposes endpoints for reading and writing documents in OPA. For an explanation of the different types of documents, see [the OPA document model](https://www.openpolicyagent.org/docs/latest/philosophy/#the-opa-document-model)",
              "name": "Data API"
            },
            {
              "description": "Posting queries to OPA",
              "name": "Query API"
            },
            {
              "description": "Posting partial queries to OPA",
              "name": "Compile API"
            },
            {
              "description": "Executes a simple built-in policy query to verify that the server is operational",
              "name": "Health API"
            }
          ]
        }
      }
    },
    {
      "id": "todo-app",
      "type": "http",
      "version": {
        "0.0.0": {
          "components": {
            "securitySchemes": {
              "bearer": {
                "scheme": "bearer",
                "type": "http"
              }
            }
          },
          "info": {
            "description": "",
            "title": "Todo-App API",
            "version": "0.0.0"
          },
          "openapi": "3.0.2",
          "paths": {
            "/collection": {
              "delete": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": [
                              "string",
                              "integer"
                            ]
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                }
              },
              "patch": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "emoji": {
                            "type": "string"
                          },
                          "id": {
                            "type": [
                              "string",
                              "integer"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "emoji",
                          "name",
                          "id"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                }
              },
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "emoji": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "emoji",
                          "name"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                }
              }
            },
            "/collection/list": {
              "get": {
                "responses": {
                  "200": {},
                  "400": {}
                }
              }
            },
            "/todo": {
              "delete": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": [
                              "string",
                              "integer"
                            ]
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                }
              },
              "patch": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "complete": {
                            "type": [
                              "integer",
                              "boolean"
                            ]
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "id": {
                            "type": [
                              "string",
                              "integer"
                            ]
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "id",
                          "complete"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                }
              }
            },
            "/todo/:collection_id": {
              "get": {
                "responses": {
                  "200": {},
                  "400": {}
                }
              },
              "post": {
                "parameters": [
                  {
                    "in": "path",
                    "name": "collection_id",
                    "required": true
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                }
              }
            },
            "/todo/check/:id": {},
            "/user": {
              "delete": {
                "responses": {
                  "200": {},
                  "400": {}
                }
              },
              "patch": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "email",
                          "name"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                },
                "x-request-examples": {
                  "test": {
                    "body": {
                      "email": "test@email.com",
                      "name": "userTest"
                    },
                    "header": {
                      "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJKb2tlbiIsImNsYWltIjp7ImV4cGlyZXMiOjE2Nzc5OTczNTEsImluZm8iOnsiY3JlYXRlX2F0IjoiMjAyMy0wMi0wMyAxNDoxNDoyMloiLCJlbWFpbCI6InRlc3RAZW1haWwuY29tIiwiaWQiOjcsIm5hbWUiOiJ0ZXN0VXNlciJ9fSwiZXhwIjoxNjc1NDEyNTUxLCJpYXQiOjE2NzU0MDUzNTEsImlzcyI6Ikpva2VuIiwianRpIjoiMnQwM21mYjkyazhkY3Y0cDNjMDAxOGE2IiwibmJmIjoxNjc1NDA1MzUxfQ.zxsmm82iJ8NwD9nycQEfwPwpkHVFpAXDcxltl0Os2qs"
                    }
                  }
                }
              },
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "description": "Email.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Username.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Password.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "password",
                          "email"
                        ],
                        "type": "object"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                },
                "security": {},
                "x-request-examples": {
                  "test": {
                    "body": {
                      "email": "test@email.com",
                      "name": "testUser",
                      "password": "qwer1234"
                    }
                  }
                }
              }
            },
            "/user/login": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {},
                  "400": {}
                },
                "security": {},
                "x-request-examples": {
                  "test": {
                    "body": {
                      "email": "test@email.com",
                      "password": "qwer1234"
                    }
                  }
                }
              }
            },
            "/user/token": {
              "post": {
                "parameters": [
                  {
                    "in": "header",
                    "name": "authorization",
                    "required": true
                  }
                ],
                "responses": {
                  "200": {},
                  "400": {}
                },
                "x-request-examples": {
                  "test": {
                    "header": {
                      "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJKb2tlbiIsImNsYWltIjp7ImV4cGlyZXMiOjE2Nzc5OTczNTEsImluZm8iOnsiY3JlYXRlX2F0IjoiMjAyMy0wMi0wMyAxNDoxNDoyMloiLCJlbWFpbCI6InRlc3RAZW1haWwuY29tIiwiaWQiOjcsIm5hbWUiOiJ0ZXN0VXNlciJ9fSwiZXhwIjoxNjc1NDEyNTUxLCJpYXQiOjE2NzU0MDUzNTEsImlzcyI6Ikpva2VuIiwianRpIjoiMnQwM21mYjkyazhkY3Y0cDNjMDAxOGE2IiwibmJmIjoxNjc1NDA1MzUxfQ.zxsmm82iJ8NwD9nycQEfwPwpkHVFpAXDcxltl0Os2qs"
                    }
                  }
                }
              }
            },
            "/user/validate": {}
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "servers": [],
          "tags": []
        }
      }
    }
  ],
  "Client": [
    {
      "currentVersion": "0.0.0",
      "id": "todo-app",
      "type": "mariadb",
      "version": {
        "0.0.0": {
          "events": [],
          "info": {
            "description": "",
            "title": "Todo-App Database"
          },
          "setting": {
            "database": "todo_app",
            "password": "password",
            "servers": [
              {
                "address": "127.0.0.1",
                "port": "3306",
                "role": [
                  "read",
                  "write"
                ]
              }
            ],
            "username": "root"
          }
        }
      }
    }
  ],
  "Server": [
    {
      "currentVersion": "0.0.0",
      "id": "todo-app",
      "type": "http",
      "version": {
        "0.0.0": {
          "events": [
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "post",
                  "path": "/user"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "SELECT COUNT(email) as count FROM user WHERE email = '${email}'",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "email",
                                "title": "email",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "email"
                                  ],
                                  "scope": "request"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "41a2d261-1f98-4163-859e-f31fc43fb836"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "read"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "3bcf0c29-a730-4b6a-9087-6f87aeef33b3"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "Comparison",
                                "type": "equal",
                                "value": [
                                  {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "query_result",
                                      0,
                                      "count"
                                    ],
                                    "scope": "variables"
                                  },
                                  0
                                ]
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "security",
                                    "description": null,
                                    "input": {
                                      "algorithm": "sha3_256",
                                      "data": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "body",
                                          "password"
                                        ],
                                        "scope": "request"
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "hash",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "hashed_password"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "8c94bf2d-1c83-4414-ae21-9de6cf3ea88c"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "data/binary",
                                    "description": null,
                                    "input": {
                                      "case": "upper",
                                      "data": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "hashed_password"
                                        ],
                                        "scope": "variables"
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "16-encode",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "hashed_password"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "f78fa832-e8f0-437d-9128-6447d3c5b241"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "string",
                                    "description": null,
                                    "input": {
                                      "string": "INSERT INTO user (`name`, `password`, `email`, `create_at`)  VALUES ('${name}', '${password}', '${email}', now())",
                                      "variable": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "name",
                                            "title": "name",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "body",
                                                "name"
                                              ],
                                              "scope": "request"
                                            }
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "password",
                                            "title": "password",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "hashed_password"
                                              ],
                                              "scope": "variables"
                                            }
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "email",
                                            "title": "email",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "body",
                                                "email"
                                              ],
                                              "scope": "request"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "interpolate",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "7c97f866-22ba-4c34-a6b1-8788ca36b5a3"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "database",
                                    "description": null,
                                    "input": {
                                      "params": [],
                                      "processReference": {
                                        "__struct__": "ClientReference",
                                        "id": "todo-app"
                                      },
                                      "processed": true,
                                      "query": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "query"
                                        ],
                                        "scope": "variables"
                                      },
                                      "return-error": false,
                                      "type": "write"
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "query",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query_result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "b803db76-f699-4dbc-8be5-635cbf32ff32"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "conditional",
                                    "description": null,
                                    "input": {
                                      "conditions": [
                                        {
                                          "condition": {
                                            "__struct__": "ScopeReference",
                                            "path": [
                                              "query_result"
                                            ],
                                            "scope": "variables"
                                          },
                                          "value": {
                                            "__struct__": "Execution",
                                            "actions": [
                                              {
                                                "__struct__": "Action",
                                                "active": true,
                                                "category": "variable",
                                                "description": null,
                                                "input": {
                                                  "value": {
                                                    "__struct__": "ObjectMapping",
                                                    "values": [
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "status_code",
                                                        "title": "status_code",
                                                        "value": 200
                                                      },
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "body",
                                                        "title": "body",
                                                        "value": {
                                                          "__struct__": "ObjectMapping",
                                                          "values": [
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "result",
                                                              "title": "result",
                                                              "value": "register has been success"
                                                            },
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "status",
                                                              "title": "status",
                                                              "value": "success"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "log": false,
                                                "mockingFlag": false,
                                                "mockingValue": null,
                                                "name": "set",
                                                "output": {
                                                  "__struct__": "ScopeReference",
                                                  "path": [
                                                    "result"
                                                  ],
                                                  "scope": "variables"
                                                },
                                                "title": null,
                                                "visualId": "d2fef48b-60a2-4ef1-8c4f-b1631cea88a1"
                                              }
                                            ],
                                            "mapping": null
                                          }
                                        },
                                        {
                                          "condition": true,
                                          "value": {
                                            "__struct__": "Execution",
                                            "actions": [
                                              {
                                                "__struct__": "Action",
                                                "active": true,
                                                "category": "variable",
                                                "description": null,
                                                "input": {
                                                  "value": {
                                                    "__struct__": "ObjectMapping",
                                                    "values": [
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "status_code",
                                                        "title": "status_code",
                                                        "value": 400
                                                      },
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "body",
                                                        "title": "body",
                                                        "value": {
                                                          "__struct__": "ObjectMapping",
                                                          "values": [
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "result",
                                                              "title": "result",
                                                              "value": "database query failed"
                                                            },
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "status",
                                                              "title": "status",
                                                              "value": "fail"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "log": false,
                                                "mockingFlag": false,
                                                "mockingValue": null,
                                                "name": "set",
                                                "output": {
                                                  "__struct__": "ScopeReference",
                                                  "path": [
                                                    "result"
                                                  ],
                                                  "scope": "variables"
                                                },
                                                "title": null,
                                                "visualId": "35c0eb2b-ebcd-4a69-9592-d7c6e6689c7a"
                                              }
                                            ],
                                            "mapping": null
                                          }
                                        }
                                      ]
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "if",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "output"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "09e1082d-da58-4301-9d89-cc25ece07410"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "email aready exists"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "e9ef3e7e-00c0-453b-92e6-abf62d1c5880"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "280de25c-b9d0-4ee1-9323-c60f13857e23"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": null,
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "post",
                  "path": "/user/login"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "security",
                        "description": null,
                        "input": {
                          "algorithm": "sha3_256",
                          "data": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "body",
                              "password"
                            ],
                            "scope": "request"
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "hash",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "hashed_password"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "e62615d2-bf7a-4427-bb7b-0d991b1a12c1"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "data/binary",
                        "description": null,
                        "input": {
                          "case": "upper",
                          "data": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "hashed_password"
                            ],
                            "scope": "variables"
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "16-encode",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "hashed_password"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "1e99d65f-7294-419b-8f89-9056fba30822"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "SELECT id, email, name, create_at FROM user WHERE email = '${email}' AND password = '${password}'",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "email",
                                "title": "email",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "email"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "password",
                                "title": "password",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "hashed_password"
                                  ],
                                  "scope": "variables"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "d1f23572-c4f5-4a6f-823a-88e5a61c4c2a"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "read"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "3adb4dfb-575d-4d11-a9e6-d0bb3f2b2176"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query_result",
                                  "0"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "service",
                                    "description": null,
                                    "input": {
                                      "input": {
                                        "info": {
                                          "__struct__": "ScopeReference",
                                          "path": [
                                            "query_result",
                                            "0"
                                          ],
                                          "scope": "variables"
                                        }
                                      },
                                      "serviceOperationReference": {
                                        "__struct__": "ServiceOperationReference",
                                        "id": "token_create",
                                        "intentReference": null,
                                        "serviceReference": {
                                          "__struct__": "ServiceReference",
                                          "id": "user_authentication",
                                          "version": "0.0.0"
                                        },
                                        "title": null
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "operation",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "operation_result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "b41cbe69-0383-47da-9c22-0b0e5967f81e"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "login success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "token",
                                                  "title": "token",
                                                  "value": {
                                                    "__struct__": "ScopeReference",
                                                    "path": [
                                                      "operation_result",
                                                      "token"
                                                    ],
                                                    "scope": "variables"
                                                  }
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "user",
                                                  "title": "user",
                                                  "value": {
                                                    "__struct__": "ScopeReference",
                                                    "path": [
                                                      "query_result",
                                                      "0"
                                                    ],
                                                    "scope": "variables"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "a3d83309-958f-4670-9baa-834019925996"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "email and password are not match"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "2b3348f4-8273-4016-b44b-b09dd35f23b2"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "416f7e71-081b-411e-8e7f-605c2638c77c"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": null,
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "post",
                  "path": "/user/token"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "authentication",
                                  "result"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "string",
                                    "description": null,
                                    "input": {
                                      "string": "SELECT id, email, name, create_at FROM user WHERE id = ${id}",
                                      "variable": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "id",
                                            "title": "id",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "authentication",
                                                "info",
                                                "id"
                                              ],
                                              "scope": "variables"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "interpolate",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "e66f83bf-0bee-42cb-be8a-2fe9396bd067"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "database",
                                    "description": null,
                                    "input": {
                                      "params": [],
                                      "processReference": {
                                        "__struct__": "ClientReference",
                                        "id": "todo-app"
                                      },
                                      "processed": true,
                                      "query": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "query"
                                        ],
                                        "scope": "variables"
                                      },
                                      "return-error": false,
                                      "type": "read"
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "query",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query_result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "74d01831-8044-4636-933d-522fc1dd3717"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "service",
                                    "description": null,
                                    "input": {
                                      "input": {
                                        "info": {
                                          "__struct__": "ScopeReference",
                                          "path": [
                                            "query_result",
                                            "0"
                                          ],
                                          "scope": "variables"
                                        }
                                      },
                                      "serviceOperationReference": {
                                        "__struct__": "ServiceOperationReference",
                                        "id": "token_create",
                                        "intentReference": null,
                                        "serviceReference": {
                                          "__struct__": "ServiceReference",
                                          "id": "user_authentication",
                                          "version": "0.0.0"
                                        },
                                        "title": null
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "operation",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "operation_result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "96a80829-f8cc-4ebe-bbf8-85a9aa219bef"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "user",
                                                  "title": "user",
                                                  "value": {
                                                    "__struct__": "ScopeReference",
                                                    "path": [
                                                      "query_result",
                                                      "0"
                                                    ],
                                                    "scope": "variables"
                                                  }
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "token",
                                                  "title": "token",
                                                  "value": {
                                                    "__struct__": "ScopeReference",
                                                    "path": [
                                                      "operation_result",
                                                      "token"
                                                    ],
                                                    "scope": "variables"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "a82ceb65-bbe0-4240-a2b1-6c0c9ef12871"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "token authentication failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "bacb96be-f12a-40e1-848a-5380ae140958"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "3c18454e-854d-4450-a4b1-9d783f12b740"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "patch",
                  "path": "/user"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "Operator",
                                "type": "NOT",
                                "value": [
                                  {
                                    "__struct__": "Comparison",
                                    "type": "equal",
                                    "value": [
                                      {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "body",
                                          "email"
                                        ],
                                        "scope": "request"
                                      },
                                      {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "authentication",
                                          "info",
                                          "email"
                                        ],
                                        "scope": "variables"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "string",
                                    "description": null,
                                    "input": {
                                      "string": "SELECT COUNT(email) as count FROM user WHERE email = '${email}'",
                                      "variable": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "email",
                                            "title": "email",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "body",
                                                "email"
                                              ],
                                              "scope": "request"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "interpolate",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "6760b17f-a907-48fa-a431-0767ea651522"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "database",
                                    "description": null,
                                    "input": {
                                      "params": [],
                                      "processReference": {
                                        "__struct__": "ClientReference",
                                        "id": "todo-app"
                                      },
                                      "processed": true,
                                      "query": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "query"
                                        ],
                                        "scope": "variables"
                                      },
                                      "return-error": false,
                                      "type": "read"
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "query",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query_result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "1601ee8c-927a-47b8-8e7c-9160622810fa"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "conditional",
                                    "description": null,
                                    "input": {
                                      "conditions": [
                                        {
                                          "condition": {
                                            "__struct__": "Comparison",
                                            "type": "equal",
                                            "value": [
                                              {
                                                "__struct__": "ScopeReference",
                                                "path": [
                                                  "query_result",
                                                  0,
                                                  "count"
                                                ],
                                                "scope": "variables"
                                              },
                                              0
                                            ]
                                          },
                                          "value": true
                                        },
                                        {
                                          "condition": true,
                                          "value": false
                                        }
                                      ]
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "if",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "data_check"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "8f1efe39-67f1-4275-80af-46ce4cbd7bbf"
                                  }
                                ],
                                "mapping": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "data_check"
                                  ],
                                  "scope": "variables"
                                }
                              }
                            },
                            {
                              "condition": true,
                              "value": true
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "data_check"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "c4586909-cefe-4506-b79b-ab0f72e5d2df"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "data_check"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "string",
                                    "description": null,
                                    "input": {
                                      "string": "UPDATE user SET name = '${name}', email = '${email}', update_at = now() WHERE id = '${id}'",
                                      "variable": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "name",
                                            "title": "name",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "body",
                                                "name"
                                              ],
                                              "scope": "request"
                                            }
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "email",
                                            "title": "email",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "body",
                                                "email"
                                              ],
                                              "scope": "request"
                                            }
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "id",
                                            "title": "id",
                                            "value": {
                                              "__struct__": "ScopeReference",
                                              "path": [
                                                "authentication",
                                                "info",
                                                "id"
                                              ],
                                              "scope": "variables"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "interpolate",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "df1206f8-d9f7-42a0-8720-a7d1ebb12f18"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "database",
                                    "description": null,
                                    "input": {
                                      "params": [],
                                      "processReference": {
                                        "__struct__": "ClientReference",
                                        "id": "todo-app"
                                      },
                                      "processed": true,
                                      "query": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "query"
                                        ],
                                        "scope": "variables"
                                      },
                                      "return-error": false,
                                      "type": "write"
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "query",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "query_result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "fd15e49e-e590-40af-86d4-b9c2cd2b459e"
                                  },
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "conditional",
                                    "description": null,
                                    "input": {
                                      "conditions": [
                                        {
                                          "condition": {
                                            "__struct__": "ScopeReference",
                                            "path": [
                                              "query_result"
                                            ],
                                            "scope": "variables"
                                          },
                                          "value": {
                                            "__struct__": "Execution",
                                            "actions": [
                                              {
                                                "__struct__": "Action",
                                                "active": true,
                                                "category": "variable",
                                                "description": null,
                                                "input": {
                                                  "value": {
                                                    "__struct__": "ObjectMapping",
                                                    "values": [
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "status_code",
                                                        "title": "status_code",
                                                        "value": 200
                                                      },
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "body",
                                                        "title": "body",
                                                        "value": {
                                                          "__struct__": "ObjectMapping",
                                                          "values": [
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "result",
                                                              "title": "result",
                                                              "value": "user info has been update"
                                                            },
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "status",
                                                              "title": "status",
                                                              "value": "success"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "log": false,
                                                "mockingFlag": false,
                                                "mockingValue": null,
                                                "name": "set",
                                                "output": {
                                                  "__struct__": "ScopeReference",
                                                  "path": [
                                                    "result"
                                                  ],
                                                  "scope": "variables"
                                                },
                                                "title": null,
                                                "visualId": "419e68c6-dcd4-4290-a299-970e4eb4b8dd"
                                              }
                                            ],
                                            "mapping": null
                                          }
                                        },
                                        {
                                          "condition": true,
                                          "value": {
                                            "__struct__": "Execution",
                                            "actions": [
                                              {
                                                "__struct__": "Action",
                                                "active": true,
                                                "category": "variable",
                                                "description": null,
                                                "input": {
                                                  "value": {
                                                    "__struct__": "ObjectMapping",
                                                    "values": [
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "status_code",
                                                        "title": "status_code",
                                                        "value": 400
                                                      },
                                                      {
                                                        "__struct__": "ObjectMappingKeyValue",
                                                        "default": null,
                                                        "exclude": false,
                                                        "key": "body",
                                                        "title": "body",
                                                        "value": {
                                                          "__struct__": "ObjectMapping",
                                                          "values": [
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "result",
                                                              "title": "result",
                                                              "value": "database query failed"
                                                            },
                                                            {
                                                              "__struct__": "ObjectMappingKeyValue",
                                                              "default": null,
                                                              "exclude": false,
                                                              "key": "status",
                                                              "title": "status",
                                                              "value": "fail"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "log": false,
                                                "mockingFlag": false,
                                                "mockingValue": null,
                                                "name": "set",
                                                "output": {
                                                  "__struct__": "ScopeReference",
                                                  "path": [
                                                    "result"
                                                  ],
                                                  "scope": "variables"
                                                },
                                                "title": null,
                                                "visualId": "8f8b8c15-beaa-4946-a5ca-f7be9ad580fe"
                                              }
                                            ],
                                            "mapping": null
                                          }
                                        }
                                      ]
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "if",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "output"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "1198cf20-3f4b-4520-970f-104356a74faa"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "email aready exists"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "4f25b6b4-8728-4fda-a1b0-2c4856f3c6da"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "965834c7-5d3d-43d4-b1ce-c43cb9981b51"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "get",
                  "path": "/collection/list"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "service",
                        "description": null,
                        "input": {
                          "input": {
                            "user_id": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "authentication",
                                "info",
                                "id"
                              ],
                              "scope": "variables"
                            }
                          },
                          "serviceOperationReference": {
                            "__struct__": "ServiceOperationReference",
                            "id": "list",
                            "intentReference": null,
                            "serviceReference": {
                              "__struct__": "ServiceReference",
                              "id": "collection",
                              "version": "0.0.0"
                            },
                            "title": null
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "operation",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "operation_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "f6b798f8-b801-42d8-8402-5bb061ab9141"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "operation_result",
                          "collection_list"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": 200
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "post",
                  "path": "/collection"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "INSERT INTO collection (name, emoji, user_id, create_at) VALUES ('${name}', '${emoji}', '${user_id}', now())",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "name",
                                "title": "name",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "name"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "emoji",
                                "title": "emoji",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "emoji"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "ee2770eb-f1a1-44a6-b8b9-cffa9cf47797"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "8a92b31f-0f18-4385-8d6f-489dfff2aadc"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query_result"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "5f657a2d-b23e-4b56-b234-a111faa79545"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "database query failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "cd3b3664-086c-4036-915c-50f44be494cd"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "de3d6c38-5dc5-4354-864b-d523400f860b"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "patch",
                  "path": "/collection"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "UPDATE collection SET name = '${name}', emoji = '${emoji}' WHERE user_id = ${user_id} AND id = ${collection_id}",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "name",
                                "title": "name",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "name"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "emoji",
                                "title": "emoji",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "emoji"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "collection_id",
                                "title": "collection_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "id"
                                  ],
                                  "scope": "request"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "430b3020-be52-4825-818f-74e1db008d6b"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "cbfd44e3-405a-46f1-a3d5-3f2ea995ab57"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query_result"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "Execution",
                                              "actions": [
                                                {
                                                  "__struct__": "Action",
                                                  "active": true,
                                                  "category": "service",
                                                  "description": null,
                                                  "input": {
                                                    "input": {
                                                      "user_id": {
                                                        "__struct__": "ScopeReference",
                                                        "path": [
                                                          "authentication",
                                                          "info",
                                                          "id"
                                                        ],
                                                        "scope": "variables"
                                                      }
                                                    },
                                                    "serviceOperationReference": {
                                                      "__struct__": "ServiceOperationReference",
                                                      "id": "list",
                                                      "intentReference": null,
                                                      "serviceReference": {
                                                        "__struct__": "ServiceReference",
                                                        "id": "collection",
                                                        "version": "0.0.0"
                                                      },
                                                      "title": null
                                                    }
                                                  },
                                                  "log": false,
                                                  "mockingFlag": false,
                                                  "mockingValue": null,
                                                  "name": "operation",
                                                  "output": {
                                                    "__struct__": "ScopeReference",
                                                    "path": [
                                                      "operation_result"
                                                    ],
                                                    "scope": "variables"
                                                  },
                                                  "title": null,
                                                  "visualId": "367e48a4-09de-4495-97b9-c3ca00021784"
                                                }
                                              ],
                                              "mapping": {
                                                "__struct__": "ScopeReference",
                                                "path": [
                                                  "operation_result",
                                                  "collection_list"
                                                ],
                                                "scope": "variables"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "2a561478-0a60-4109-a430-6ea94c808c76"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "database query failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "0cafef88-088a-4d0b-bebf-38fa075c85a7"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "a40ab581-2c46-4e8f-a87d-4d72e477a695"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "delete",
                  "path": "/collection"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "DELETE FROM collection WHERE user_id = ${user_id} AND id = ${collection_id}",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "collection_id",
                                "title": "collection_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "id"
                                  ],
                                  "scope": "request"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "496ad75d-996a-44bc-b696-54cacfcbe3ae"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "collection_query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "6e91bd64-3cde-4004-9656-48c59586e218"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "DELETE FROM todo WHERE user_id = ${user_id} AND collection_id = ${collection_id}",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "collection_id",
                                "title": "collection_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "id"
                                  ],
                                  "scope": "request"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "964f1d5e-5ea9-4f02-bc29-f0afe8f9249b"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "todo_query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "cd9a58a0-0391-40cd-89be-14c4c47541a5"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "Operator",
                                "type": "AND",
                                "value": [
                                  {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "collection_query_result"
                                    ],
                                    "scope": "variables"
                                  },
                                  {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "todo_query_result"
                                    ],
                                    "scope": "variables"
                                  }
                                ]
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "1b43a7ad-3c86-4ff3-b1f9-cf0716516af7"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "database query failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "083c9eea-fc8b-4ead-a53e-1fc5066d3af9"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "b1e50e8f-5cec-4675-ac02-623b4d87c59f"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "post",
                  "path": "/todo/:collection_id"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "INSERT INTO todo (title, collection_id, user_id, create_at) VALUES ('${title}', '${collection_id}', '${user_id}', now())",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "title",
                                "title": "title",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "title"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "collection_id",
                                "title": "collection_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "path",
                                    "collection_id"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "277aff34-a1cd-4799-b3dc-63aeb573180e"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "5818153a-dfc6-48f2-adec-e5629303c835"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query_result"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "50ce69ba-681a-4efa-ac30-72caa42ab848"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "database query failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "a871f42e-b276-415e-976b-ff23c801bb88"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "33a8c32d-5f61-4003-bd1a-58b2d808f6ee"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "delete",
                  "path": "/todo"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "DELETE FROM todo WHERE user_id = ${user_id} AND id = ${todo_id}",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "todo_id",
                                "title": "todo_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "id"
                                  ],
                                  "scope": "request"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "33efb075-c948-40b4-a217-613593679ec3"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "f9226a94-d7fd-4c53-b006-e707fa70f5ff"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query_result"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "0fc6c313-b618-46fa-938f-2719ae67f740"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "database query failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "868ab9e6-0c8c-4296-b264-7339a07c716d"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "00f16f6e-dd31-4a15-bc33-60d2590a964f"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "get",
                  "path": "/todo/:collection_id"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "service",
                        "description": null,
                        "input": {
                          "input": {
                            "collection_id": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "path",
                                "collection_id"
                              ],
                              "scope": "request"
                            },
                            "user_id": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "authentication",
                                "info",
                                "id"
                              ],
                              "scope": "variables"
                            }
                          },
                          "serviceOperationReference": {
                            "__struct__": "ServiceOperationReference",
                            "id": "list",
                            "intentReference": null,
                            "serviceReference": {
                              "__struct__": "ServiceReference",
                              "id": "collection",
                              "version": "0.0.0"
                            },
                            "title": null
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "operation",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "operation_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "cf33365a-20ff-4bcb-b58e-27046acca0ca"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "operation_result",
                          "collection_list",
                          "0"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": 200
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            },
            {
              "event": {
                "__struct__": "APIOperationReference",
                "apiReference": {
                  "__struct__": "APIReference",
                  "id": "todo-app",
                  "version": "0.0.0"
                },
                "operationReference": {
                  "__struct__": "HTTPOperationReference",
                  "method": "patch",
                  "path": "/todo"
                }
              },
              "matches": [
                {
                  "do": {
                    "__struct__": "Execution",
                    "actions": [
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "string",
                        "description": null,
                        "input": {
                          "string": "UPDATE todo SET title = '${title}', description = '${description}', complete = '${complete}' WHERE user_id = ${user_id} AND id = ${todo_id}",
                          "variable": {
                            "__struct__": "ObjectMapping",
                            "values": [
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "user_id",
                                "title": "user_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "authentication",
                                    "info",
                                    "id"
                                  ],
                                  "scope": "variables"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "todo_id",
                                "title": "todo_id",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "id"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "title",
                                "title": "title",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "title"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "description",
                                "title": "description",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "description"
                                  ],
                                  "scope": "request"
                                }
                              },
                              {
                                "__struct__": "ObjectMappingKeyValue",
                                "default": null,
                                "exclude": false,
                                "key": "complete",
                                "title": "complete",
                                "value": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "body",
                                    "complete"
                                  ],
                                  "scope": "request"
                                }
                              }
                            ]
                          }
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "interpolate",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "9c43afad-3284-4255-b47e-3209de57a747"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "database",
                        "description": null,
                        "input": {
                          "params": [],
                          "processReference": {
                            "__struct__": "ClientReference",
                            "id": "todo-app"
                          },
                          "processed": true,
                          "query": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "query"
                            ],
                            "scope": "variables"
                          },
                          "return-error": false,
                          "type": "write"
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "query",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "query_result"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "ca06c80f-cb30-4a24-85f5-942b13342942"
                      },
                      {
                        "__struct__": "Action",
                        "active": true,
                        "category": "conditional",
                        "description": null,
                        "input": {
                          "conditions": [
                            {
                              "condition": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query_result"
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 200
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "success"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "success"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "19216f03-9baa-41f3-bb52-2d8de1883b0e"
                                  }
                                ],
                                "mapping": null
                              }
                            },
                            {
                              "condition": true,
                              "value": {
                                "__struct__": "Execution",
                                "actions": [
                                  {
                                    "__struct__": "Action",
                                    "active": true,
                                    "category": "variable",
                                    "description": null,
                                    "input": {
                                      "value": {
                                        "__struct__": "ObjectMapping",
                                        "values": [
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "status_code",
                                            "title": "status_code",
                                            "value": 400
                                          },
                                          {
                                            "__struct__": "ObjectMappingKeyValue",
                                            "default": null,
                                            "exclude": false,
                                            "key": "body",
                                            "title": "body",
                                            "value": {
                                              "__struct__": "ObjectMapping",
                                              "values": [
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "result",
                                                  "title": "result",
                                                  "value": "database query failed"
                                                },
                                                {
                                                  "__struct__": "ObjectMappingKeyValue",
                                                  "default": null,
                                                  "exclude": false,
                                                  "key": "status",
                                                  "title": "status",
                                                  "value": "fail"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "log": false,
                                    "mockingFlag": false,
                                    "mockingValue": null,
                                    "name": "set",
                                    "output": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "result"
                                      ],
                                      "scope": "variables"
                                    },
                                    "title": null,
                                    "visualId": "b9287eb3-e5d9-4ec0-bff7-5d91918831b5"
                                  }
                                ],
                                "mapping": null
                              }
                            }
                          ]
                        },
                        "log": false,
                        "mockingFlag": false,
                        "mockingValue": null,
                        "name": "if",
                        "output": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "output"
                          ],
                          "scope": "variables"
                        },
                        "title": null,
                        "visualId": "5c8d6146-fdac-43a5-903a-21e6886695bb"
                      }
                    ],
                    "mapping": {
                      "body": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "body"
                        ],
                        "scope": "variables"
                      },
                      "header": {},
                      "status_code": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "result",
                          "status_code"
                        ],
                        "scope": "variables"
                      }
                    }
                  },
                  "in": {}
                }
              ],
              "setting": {},
              "test": {}
            }
          ],
          "info": {
            "description": "",
            "title": "Todo-App Server"
          },
          "setting": {
            "allowCredentials": "*",
            "allowHeaders": "*",
            "allowMethods": "*",
            "allowOrigin": "*",
            "apis": [
              {
                "__struct__": "APIReference",
                "id": "todo-app",
                "version": "0.0.0"
              }
            ],
            "cors": true,
            "id": "todo-app",
            "port": 8080,
            "securities": [
              {
                "do": {
                  "__struct__": "Execution",
                  "actions": [
                    {
                      "__struct__": "Action",
                      "active": true,
                      "category": "conditional",
                      "description": null,
                      "input": {
                        "conditions": [
                          {
                            "condition": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "header",
                                "authorization"
                              ],
                              "scope": "request"
                            },
                            "value": {
                              "__struct__": "Execution",
                              "actions": [
                                {
                                  "__struct__": "Action",
                                  "active": true,
                                  "category": "service",
                                  "description": null,
                                  "input": {
                                    "input": {
                                      "authorization": {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "header",
                                          "authorization"
                                        ],
                                        "scope": "request"
                                      }
                                    },
                                    "serviceOperationReference": {
                                      "__struct__": "ServiceOperationReference",
                                      "id": "token_authentication",
                                      "intentReference": null,
                                      "serviceReference": {
                                        "__struct__": "ServiceReference",
                                        "id": "user_authentication",
                                        "version": "0.0.0"
                                      },
                                      "title": null
                                    }
                                  },
                                  "log": false,
                                  "mockingFlag": false,
                                  "mockingValue": null,
                                  "name": "operation",
                                  "output": {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "authentication"
                                    ],
                                    "scope": "variables"
                                  },
                                  "title": null,
                                  "visualId": "07e9250c-dbf3-4902-8919-e9b02526a3bd"
                                }
                              ],
                              "mapping": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "authentication",
                                  "token"
                                ],
                                "scope": "variables"
                              }
                            }
                          },
                          {
                            "condition": true,
                            "value": null
                          }
                        ]
                      },
                      "log": false,
                      "mockingFlag": false,
                      "mockingValue": null,
                      "name": "if",
                      "output": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "token"
                        ],
                        "scope": "variables"
                      },
                      "title": null,
                      "visualId": "c17033a3-4c07-48bd-844c-71a07f3abf9d"
                    }
                  ],
                  "mapping": {
                    "data": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "token"
                      ],
                      "scope": "variables"
                    }
                  }
                },
                "securityReference": {
                  "__struct__": "SecurityReference",
                  "apiReference": {
                    "__struct__": "APIReference",
                    "id": "todo-app",
                    "version": "0.0.0"
                  },
                  "name": "bearer"
                }
              }
            ],
            "tls": false
          }
        }
      }
    }
  ],
  "Service": [
    {
      "id": "user_authentication",
      "version": {
        "0.0.0": {
          "info": {
            "description": "",
            "title": "Todo-App Authentication Service"
          },
          "operation": {
            "token_authentication": {
              "do": {
                "__struct__": "Execution",
                "actions": [
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "security",
                    "description": null,
                    "input": {
                      "authorization": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "authorization"
                        ],
                        "scope": "input"
                      }
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "authorization-decode",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "authorization_data"
                      ],
                      "scope": "variables"
                    },
                    "title": "",
                    "visualId": "644ab7c6-67eb-4d2a-9911-182ad785b3fb"
                  },
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "data/jwt",
                    "description": null,
                    "input": {
                      "jwt": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "authorization_data",
                          "token"
                        ],
                        "scope": "variables"
                      }
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "decode",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "decode"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "b0caef39-5f33-4baa-845e-fd1219e770aa"
                  },
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "datetime",
                    "description": null,
                    "input": {
                      "time_unit": "second"
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "current-unix-time",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "current_time"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "48f742de-d1e6-4880-a5a8-3a2ca6d0af43"
                  },
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "conditional",
                    "description": null,
                    "input": {
                      "conditions": [
                        {
                          "condition": {
                            "__struct__": "Operator",
                            "type": "AND",
                            "value": [
                              {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "decode",
                                  "info"
                                ],
                                "scope": "variables"
                              },
                              {
                                "__struct__": "Comparison",
                                "type": "greater-than",
                                "value": [
                                  {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "decode",
                                      "expires"
                                    ],
                                    "scope": "variables"
                                  },
                                  {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "current_time"
                                    ],
                                    "scope": "variables"
                                  }
                                ]
                              }
                            ]
                          },
                          "value": {
                            "__struct__": "Execution",
                            "actions": [
                              {
                                "__struct__": "Action",
                                "active": true,
                                "category": "service",
                                "description": null,
                                "input": {
                                  "input": {
                                    "info": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "decode",
                                        "info"
                                      ],
                                      "scope": "variables"
                                    }
                                  },
                                  "serviceOperationReference": {
                                    "__struct__": "ServiceOperationReference",
                                    "id": "token_create",
                                    "intentReference": null,
                                    "serviceReference": {
                                      "__struct__": "ServiceReference",
                                      "id": "user_authentication",
                                      "version": "0.0.0"
                                    },
                                    "title": null
                                  }
                                },
                                "log": false,
                                "mockingFlag": false,
                                "mockingValue": null,
                                "name": "operation",
                                "output": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "create_token"
                                  ],
                                  "scope": "variables"
                                },
                                "title": null,
                                "visualId": "78350b21-3e3d-418c-a0d5-6696e277af9d"
                              }
                            ],
                            "mapping": true
                          }
                        },
                        {
                          "condition": true,
                          "value": false
                        }
                      ]
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "if",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "result"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "3f040a9e-a560-4639-b790-9fce36d76e89"
                  }
                ],
                "mapping": {
                  "info": {
                    "__struct__": "ScopeReference",
                    "path": [
                      "decode",
                      "info"
                    ],
                    "scope": "variables"
                  },
                  "result": {
                    "__struct__": "ScopeReference",
                    "path": [
                      "result"
                    ],
                    "scope": "variables"
                  },
                  "token": {
                    "__struct__": "ScopeReference",
                    "path": [
                      "create_token",
                      "token"
                    ],
                    "scope": "variables"
                  }
                }
              },
              "errorTypes": [],
              "id": "token_authentication",
              "in": {
                "__struct__": "Schema",
                "type": "arguments",
                "value": [
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "authorization",
                    "label": null,
                    "required": true,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "string"
                      }
                    },
                    "static": false
                  }
                ]
              },
              "info": {},
              "intents": [],
              "out": {
                "__struct__": "Schema",
                "type": "arguments",
                "value": [
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "result",
                    "label": null,
                    "required": true,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "boolean"
                      }
                    },
                    "static": false
                  },
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "token",
                    "label": null,
                    "required": false,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "string"
                      }
                    },
                    "static": false
                  },
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "info",
                    "label": null,
                    "required": false,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "object"
                      }
                    },
                    "static": false
                  }
                ]
              },
              "test": {}
            },
            "token_create": {
              "do": {
                "__struct__": "Execution",
                "actions": [
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "data/jwt",
                    "description": null,
                    "input": {
                      "data": {
                        "__struct__": "ObjectMapping",
                        "values": [
                          {
                            "__struct__": "ObjectMappingKeyValue",
                            "default": null,
                            "exclude": false,
                            "key": "info",
                            "title": "info",
                            "value": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "info"
                              ],
                              "scope": "input"
                            }
                          },
                          {
                            "__struct__": "ObjectMappingKeyValue",
                            "default": null,
                            "exclude": false,
                            "key": "expires",
                            "title": "expires",
                            "value": {
                              "__struct__": "Execution",
                              "actions": [
                                {
                                  "__struct__": "Action",
                                  "active": true,
                                  "category": "datetime",
                                  "description": null,
                                  "input": {
                                    "time_unit": "second"
                                  },
                                  "log": false,
                                  "mockingFlag": false,
                                  "mockingValue": null,
                                  "name": "current-unix-time",
                                  "output": {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "current_time"
                                    ],
                                    "scope": "variables"
                                  },
                                  "title": null,
                                  "visualId": "9ae2e8d5-30ac-43b6-9f4d-6b47918aa5d5"
                                },
                                {
                                  "__struct__": "Action",
                                  "active": true,
                                  "category": "array",
                                  "description": null,
                                  "input": {
                                    "array": [
                                      {
                                        "__struct__": "ScopeReference",
                                        "path": [
                                          "current_time"
                                        ],
                                        "scope": "variables"
                                      },
                                      2592000
                                    ]
                                  },
                                  "log": false,
                                  "mockingFlag": false,
                                  "mockingValue": null,
                                  "name": "sum",
                                  "output": {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "expires"
                                    ],
                                    "scope": "variables"
                                  },
                                  "title": null,
                                  "visualId": "a2d6c129-4349-4d6a-a681-7934883ff256"
                                }
                              ],
                              "mapping": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "expires"
                                ],
                                "scope": "variables"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "encode",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "token"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "926c1b38-617e-4b5b-b7f3-4c56dc53ce68"
                  }
                ],
                "mapping": {
                  "token": {
                    "__struct__": "ScopeReference",
                    "path": [
                      "token"
                    ],
                    "scope": "variables"
                  }
                }
              },
              "errorTypes": [],
              "id": "token_create",
              "in": {
                "__struct__": "Schema",
                "type": "arguments",
                "value": [
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "info",
                    "label": null,
                    "required": true,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "object"
                      }
                    },
                    "static": false
                  }
                ]
              },
              "info": {},
              "intents": [],
              "out": {
                "__struct__": "Schema",
                "type": "arguments",
                "value": [
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "token",
                    "label": null,
                    "required": true,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "string"
                      }
                    },
                    "static": false
                  }
                ]
              },
              "test": {}
            }
          }
        }
      }
    },
    {
      "id": "collection",
      "version": {
        "0.0.0": {
          "info": {
            "description": "",
            "title": "Todo-App Collection Service"
          },
          "operation": {
            "list": {
              "do": {
                "__struct__": "Execution",
                "actions": [
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "conditional",
                    "description": null,
                    "input": {
                      "conditions": [
                        {
                          "condition": {
                            "__struct__": "ScopeReference",
                            "path": [
                              "collection_id"
                            ],
                            "scope": "input"
                          },
                          "value": {
                            "__struct__": "Execution",
                            "actions": [
                              {
                                "__struct__": "Action",
                                "active": true,
                                "category": "string",
                                "description": null,
                                "input": {
                                  "string": "SELECT * FROM collection WHERE user_id = ${user_id} AND id = ${collection_id}",
                                  "variable": {
                                    "__struct__": "ObjectMapping",
                                    "values": [
                                      {
                                        "__struct__": "ObjectMappingKeyValue",
                                        "default": null,
                                        "exclude": false,
                                        "key": "user_id",
                                        "title": "user_id",
                                        "value": {
                                          "__struct__": "ScopeReference",
                                          "path": [
                                            "user_id"
                                          ],
                                          "scope": "input"
                                        }
                                      },
                                      {
                                        "__struct__": "ObjectMappingKeyValue",
                                        "default": null,
                                        "exclude": false,
                                        "key": "collection_id",
                                        "title": "collection_id",
                                        "value": {
                                          "__struct__": "ScopeReference",
                                          "path": [
                                            "collection_id"
                                          ],
                                          "scope": "input"
                                        }
                                      }
                                    ]
                                  }
                                },
                                "log": false,
                                "mockingFlag": false,
                                "mockingValue": null,
                                "name": "interpolate",
                                "output": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "query"
                                  ],
                                  "scope": "variables"
                                },
                                "title": null,
                                "visualId": "aa65d2eb-1ab7-49e8-aa28-62791f2ecab6"
                              }
                            ],
                            "mapping": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "query"
                              ],
                              "scope": "variables"
                            }
                          }
                        },
                        {
                          "condition": true,
                          "value": {
                            "__struct__": "Execution",
                            "actions": [
                              {
                                "__struct__": "Action",
                                "active": true,
                                "category": "string",
                                "description": null,
                                "input": {
                                  "string": "SELECT * FROM collection WHERE user_id = ${user_id}",
                                  "variable": {
                                    "__struct__": "ObjectMapping",
                                    "values": [
                                      {
                                        "__struct__": "ObjectMappingKeyValue",
                                        "default": null,
                                        "exclude": false,
                                        "key": "user_id",
                                        "title": "user_id",
                                        "value": {
                                          "__struct__": "ScopeReference",
                                          "path": [
                                            "user_id"
                                          ],
                                          "scope": "input"
                                        }
                                      }
                                    ]
                                  }
                                },
                                "log": false,
                                "mockingFlag": false,
                                "mockingValue": null,
                                "name": "interpolate",
                                "output": {
                                  "__struct__": "ScopeReference",
                                  "path": [
                                    "query"
                                  ],
                                  "scope": "variables"
                                },
                                "title": null,
                                "visualId": "3a38a8b7-eb4f-45c0-bc17-8c60eebb4da6"
                              }
                            ],
                            "mapping": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "query"
                              ],
                              "scope": "variables"
                            }
                          }
                        }
                      ]
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "if",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "query"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "c0938717-3867-4f9a-96ef-6de4f6e0da94"
                  },
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "database",
                    "description": null,
                    "input": {
                      "params": [],
                      "processReference": {
                        "__struct__": "ClientReference",
                        "id": "todo-app"
                      },
                      "processed": true,
                      "query": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "query"
                        ],
                        "scope": "variables"
                      },
                      "return-error": false,
                      "type": "read"
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "query",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "collection_query_result"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "61c5f524-3ecd-4d8e-9550-308a1401c734"
                  },
                  {
                    "__struct__": "Action",
                    "active": true,
                    "category": "iteration",
                    "description": null,
                    "input": {
                      "array": {
                        "__struct__": "ScopeReference",
                        "path": [
                          "collection_query_result"
                        ],
                        "scope": "variables"
                      },
                      "foreach": {
                        "__struct__": "Execution",
                        "actions": [
                          {
                            "__struct__": "Action",
                            "active": true,
                            "category": "string",
                            "description": null,
                            "input": {
                              "string": "SELECT * FROM todo WHERE user_id = ${user_id} AND collection_id =  ${collection_id}",
                              "variable": {
                                "__struct__": "ObjectMapping",
                                "values": [
                                  {
                                    "__struct__": "ObjectMappingKeyValue",
                                    "default": null,
                                    "exclude": false,
                                    "key": "collection_id",
                                    "title": "collection_id",
                                    "value": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "value",
                                        "id"
                                      ],
                                      "scope": "collection"
                                    }
                                  },
                                  {
                                    "__struct__": "ObjectMappingKeyValue",
                                    "default": null,
                                    "exclude": false,
                                    "key": "user_id",
                                    "title": "user_id",
                                    "value": {
                                      "__struct__": "ScopeReference",
                                      "path": [
                                        "user_id"
                                      ],
                                      "scope": "input"
                                    }
                                  }
                                ]
                              }
                            },
                            "log": false,
                            "mockingFlag": false,
                            "mockingValue": null,
                            "name": "interpolate",
                            "output": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "query"
                              ],
                              "scope": "variables"
                            },
                            "title": null,
                            "visualId": "b357bbed-09eb-4134-a3d0-8370988994ed"
                          },
                          {
                            "__struct__": "Action",
                            "active": true,
                            "category": "database",
                            "description": null,
                            "input": {
                              "params": [],
                              "processReference": {
                                "__struct__": "ClientReference",
                                "id": "todo-app"
                              },
                              "processed": true,
                              "query": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "query"
                                ],
                                "scope": "variables"
                              },
                              "return-error": false,
                              "type": "read"
                            },
                            "log": false,
                            "mockingFlag": false,
                            "mockingValue": null,
                            "name": "query",
                            "output": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "todo_query_result"
                              ],
                              "scope": "variables"
                            },
                            "title": null,
                            "visualId": "6c27fc0a-517d-4845-8da9-9a144e5b4eb6"
                          },
                          {
                            "__struct__": "Action",
                            "active": true,
                            "category": "object",
                            "description": null,
                            "input": {
                              "key": "Todo",
                              "object": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "collection_query_result",
                                  {
                                    "__struct__": "ScopeReference",
                                    "path": [
                                      "index"
                                    ],
                                    "scope": "collection"
                                  }
                                ],
                                "scope": "variables"
                              },
                              "value": {
                                "__struct__": "ScopeReference",
                                "path": [
                                  "todo_query_result"
                                ],
                                "scope": "variables"
                              }
                            },
                            "log": false,
                            "mockingFlag": false,
                            "mockingValue": null,
                            "name": "put",
                            "output": {
                              "__struct__": "ScopeReference",
                              "path": [
                                "collection_list"
                              ],
                              "scope": "variables"
                            },
                            "title": null,
                            "visualId": "5a54d4d1-7387-49e8-92ca-d38faf13b5dc"
                          }
                        ],
                        "mapping": {
                          "__struct__": "ScopeReference",
                          "path": [
                            "collection_list"
                          ],
                          "scope": "variables"
                        }
                      },
                      "scope": "collection"
                    },
                    "log": false,
                    "mockingFlag": false,
                    "mockingValue": null,
                    "name": "map",
                    "output": {
                      "__struct__": "ScopeReference",
                      "path": [
                        "collection_list"
                      ],
                      "scope": "variables"
                    },
                    "title": null,
                    "visualId": "d15e28c2-bf9d-419b-9d87-001974cc7581"
                  }
                ],
                "mapping": {
                  "collection_list": {
                    "__struct__": "ScopeReference",
                    "path": [
                      "collection_list"
                    ],
                    "scope": "variables"
                  },
                  "list": {
                    "__struct__": "ScopeReference",
                    "path": [
                      "collection_list"
                    ],
                    "scope": "variables"
                  }
                }
              },
              "errorTypes": [],
              "id": "list",
              "in": {
                "__struct__": "Schema",
                "type": "arguments",
                "value": [
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "user_id",
                    "label": null,
                    "required": true,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": [
                          "string",
                          "integer"
                        ]
                      }
                    },
                    "static": false
                  },
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "collection_id",
                    "label": null,
                    "required": false,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": [
                          "string",
                          "integer"
                        ]
                      }
                    },
                    "static": false
                  }
                ]
              },
              "info": {},
              "intents": [],
              "out": {
                "__struct__": "Schema",
                "type": "arguments",
                "value": [
                  {
                    "__struct__": "Field",
                    "eval": true,
                    "id": "collection_list",
                    "label": null,
                    "required": true,
                    "schema": {
                      "__struct__": "Schema",
                      "type": "json",
                      "value": {
                        "type": "array"
                      }
                    },
                    "static": false
                  }
                ]
              },
              "test": {}
            }
          }
        }
      }
    }
  ]
}